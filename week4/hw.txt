9. 

(This problem uses the pattern datatype but is not really about
pattern-matching.) 

A function g has been provided to you.  

g (unit->int) -> (string->int) -> pattern -> int



(a) 
Use g to define a
function 

count_wildcards 

that takes a pattern and returns how many Wildcard patterns it contains.  

(b) 

Use g to define a function
count_wild_and_variable_lengths that takes a pattern and returns the number of
Wildcard patterns it contains plus the sum of the string lengths of all the
variables in the variable patterns it contains. (Use String.size. We care only
about variable names; the constructor names are not relevant.) 

(c) 
Use g to define a function 

count_some_var 

that takes a string and a pattern (as a pair) and 
returns the number of times the string appears as a variable in the pattern.

We care only about variable names; the constructor names are not relevant.
